#!/usr/bin/env bash

#
# Set Altera Quartus path variable
#  usage:
#   q2_set_path         - info (list Quartus install dir)
#   q2_set_path -i      - info (list Quartus install dir)
#   q2_set_path 12.1    - set Quartus root dir (only if there is path to version 12.1)
#
#

echo "+------------------------------------------------------------------------+"
echo "| Set Altera Quartus path variable                                       |"
echo "+------------------------------------------------------------------------+"

# Function to set variable coupled to Quartus:
#   QUARTUS_ROOTDIR_OVERRIDE
#   QUARTUS_ROOTDIR,
#   quartus_bin_dir,
#   nios2_bin_dir.
#
# Input parameter:
#  1 - Quartus version number
#  2 - Path to Quartus directory

# FIXME: set Standard Quartus version after Pro

fun_q2_set_path ()
{
    if [ -n "$1" ]; then
        PATH2QUARTUS_VERSION=${QUARTUS_ROOTDIR_OVERRIDE:0:(${#QUARTUS_ROOTDIR_OVERRIDE} - 8)}
        PATH2QUARTUS=${PATH2QUARTUS_VERSION%/*.*}
        if [ "$2" = "pro" ]; then
            PATH2QUARTUS=${PATH2QUARTUS_VERSION%/*.*}_pro
        else
            PATH2QUARTUS=${PATH2QUARTUS_VERSION%/*.*}
        fi
        _PATH="${PATH2QUARTUS}/$1/quartus"
        if [ -d "$_PATH" ]; then
            export QUARTUS_ROOTDIR_OVERRIDE="${_PATH}"
            export QUARTUS_ROOTDIR="${_PATH}"
            printf "\\e[32m\\e[1mSetup of path successful!\\e[0m\\n"
        else
            printf "\\e[31m\\e[1m"
            echo "  *****************************************************"
            echo "  *  ERROR! can't find required '$1' quartus version"
            echo "  *  (there are not PATH: $_PATH)"
            echo "  *****************************************************"
            printf "\\e[0m"
            # exit 1
        fi
    fi

    # BITS:
    if [ "`uname`" = Linux ]; then
        BITS=bin
    fi
    if [ "$OS" = "Windows_NT" ]; then
        if [ $QUARTUS_64BIT -eq 1 ]
        then
            BITS=bin64
        else
            BITS=bin
        fi
    fi

    quartus_bin_dir="$QUARTUS_ROOTDIR_OVERRIDE/$BITS"
    nios2_bin_dir="$QUARTUS_ROOTDIR_OVERRIDE/../nios2eds/bin"
}

list_dir() {
    DIR="$1"
    ls "$DIR" &> /dev/null
    if [ "$?" == 0 ]; then
        echo "+----------------"
        echo "| $DIR"
        ls -F "$DIR" | grep / | sed "s/\///g"
    fi
}

if [ "$#" -eq 0 ] || [ "$1" == '-h' ] || [ "$1" == '--help' ] || [ "$1" == '-help' ]; then
    echo "Input variables:"
    echo "  1 - Quartus version number, 13.0sp1, 18.1, available values see below"
    echo "  2 - Quartus version suffix: pro/<empty>"
    echo "Usage example:"
    echo "  <script_name> 18.1 pro"
    echo ""
    echo "List of available Quartus directories:"
    if [ "`uname`" = Linux ]; then
        list_dir /opt/altera
    else
        list_dir "/c/Altera"
        list_dir "/c/Altera_pro"
        list_dir "/c/intelFPGA"
        list_dir "/c/intelFPGA_pro"
    fi
else

    . "$PATH2SCRIPT"/fun_q2_set_path
    fun_q2_set_path $*

    export PATH="$quartus_bin_dir:$PATH"
    # QSYS_ROOTDIR:
    export PATH="$quartus_bin_dir/../sopc_builder/bin:$PATH"

    echo " Set (version '$1' $2):"
    echo "  QUARTUS_ROOTDIR_OVERRIDE = $QUARTUS_ROOTDIR_OVERRIDE"
    echo "  QUARTUS_ROOTDIR          = $QUARTUS_ROOTDIR"
    echo "  PATH(added to PATH)      = $quartus_bin_dir"
    echo " Done!"
fi
