#!/usr/bin/env bash

#
# Programming with Quartus Prime Programmer via ASP
#
# This script launches Intel Quartus Prime Programmer to program 'pof' file via ASP. The 'pof'
# file is searched for in the current directory or given as an argument.
#
# For more then one program cable:
#     set environment variable 'QP_CABLE_NAME':
#     # export QP_CABLE_NAME=USB-Blaster[USB-0]

echo "+------------------------------------------------------------------------+"
echo "|  Quartus Prime Programmer (ASP) programming                            |"
echo "+------------------------------------------------------------------------+"

read_yesno () {
    while :
    do
        echo "$* (y/n)?"
        read -r yn

        case $yn in
            y|Y|yes|Yes|YES)
                return 0
                ;;
            n|N|no|No|NO)
                return 1
                ;;
            *)
                echo Please answer Yes or No.
                ;;
        esac
    done
}

if [ -z "$QP_CABLE_NAME" ]; then
    QP_CABLE_NAME="USB-Blaster[USB-0]"
fi

SCRIPT_NAME="${BASH_SOURCE##*/}"

if [ "$1" == '-h' ] || [ "$1" == '--help' ] || [ "$1" == '-help' ]; then
    echo "Usage:"
    echo "  $SCRIPT_NAME [pof-file-name | pof-file-number]"
    echo ""
    echo "ARGS:"
    echo "    <pof-file-name>"
    echo "            File name for programming."
    echo "    <pof-file-number>"
    echo "            File number for programming."
    exit 0
fi

select_file ()
{
    IFS=$'\n' f_arr=($(find . -type f \( -name "*.pof" \)))

    if [ ${#f_arr[@]} -gt 0 ]; then
        if [ ${#f_arr[@]} -eq 1 ]; then
            echo " ${f_arr[${1}]}"
        else
            echo " file(s) for programming:"
            cnt=1
            for i in "${f_arr[@]}"; do
                echo "$cnt: $i"
                ((cnt++))
            done
            echo "Select file :"
            read -r file_num
            ((file_num--))
        fi
    else
        echo "ERROR! There must be at least one *.pof file in dir: $(pwd)"
        exit 2
    fi
    if [ -s "${f_arr[$file_num]}" ]; then
        f_name=${f_arr[$file_num]}
    else
        f_name=${f_arr[1]}
        if [ ${#f_arr[@]} -gt 1 ]; then
            echo "WARNING: will be open default pof file (can't find selected file)"
        fi
    fi

    if [ ${#f_arr[@]} -gt 1 ]; then
        while :
        do
            if read_yesno "Would you like burnnig file: '$f_name'" ; then
                break;
            else
                echo "NOTE! Exit without burnnig!";
                exit 0;
            fi
        done
    fi
}

if [ -n "$1" ]; then
    if [ ! -s "$1" ]; then
        echo "ERROR! Can't find selected file: '$1'"
        exit 3
    fi
    f_name=$1
else
    select_file "$@"
fi

f_time=$(date +%c -r "$f_name")
echo "File to Programming: '$f_name'" "$f_time"

quartus_pgm -c "$QP_CABLE_NAME" -m as -o bpv\;"$f_name"

RC=$?
RED="\e[31m\e[1m"
GREEN="\e[32m\e[1m"
NORMAL="\e[0m"
if [ "$RC" != 0 ]; then
    printf "${RED}Programming Error!${NORMAL}\n"
else
    printf "${GREEN}Programming successful!${NORMAL}\n"
fi

exit "$RC"
