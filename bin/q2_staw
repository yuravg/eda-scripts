#!/usr/bin/env bash

#
# Open Altera Quartus TimeQuest Timing Analyzer, project from current directory
#  input parameter(s):
#    $1 - quartus software version ( "" or empty - for default version )
#         or quartus project revision number (only for $1 = 0,1..9 - one digit)
#

echo "+------------------------------------------------------------------------+"
echo "|  Open quartus project                                                  |"
echo "+------------------------------------------------------------------------+"

. ~/bin/fun_q2_set_path

case "$1" in
    [0-9] )
        fun_q2_set_path
        revision=$1
        ;;
    *     )
        fun_q2_set_path $1
        revision="$2"
        ;;
esac

cnt=1
for p in `ls *.qpf 2>/dev/null`; do
    prj[$cnt]=$p
    cnt=`expr $cnt + 1`
done
if [ ${#prj[@]} -ne 1 ]; then
    echo "ERROR! Must be at least one *.qpf file in dir: `pwd`"
    exit 2
else
    project=${prj[1]}
    echo " project : '$project'"
fi

cnt=1
for p in `ls *.qsf 2>/dev/null`; do
    rev[$cnt]=$p
    cnt=`expr $cnt + 1`
done
if [ ${#rev[@]} -gt 0 ]; then
    echo " revisions:"
    for (( i=1; i<${#rev[@]}+1; i++ )); do
        echo "$i : ${rev[${i}]}"
    done
    echo "Select revision:"
    if [ "$revision" = "" ]; then
        if [ ${#rev[@]} -eq 1 ]; then
            num_revision=1
        else
            read num_revision
        fi
    else
        echo "input parameter (revision): $revision"
        num_revision=$revision
    fi
elif [ ${#rev[@]} -eq 0 ]; then
    echo "ERROR! Must be at least one *.qsf file in dir: `pwd`"
    exit 3
else
    num_revision=1
fi
case "$num_revision" in
    [1-9])
        revision_name=${rev[$num_revision]}
        ;;
    *)
        revision_name=${rev[1]}
        echo "WARNING: will be open default revision"
        ;;
esac
echo "revision : '$revision_name'"

$quartus_bin_dir/quartus_staw $project -c $revision_name &
echo "Done!"
